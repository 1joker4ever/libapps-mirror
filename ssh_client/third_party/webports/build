#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Copyright 2018 The Chromium OS Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

"""Build webports package."""

from __future__ import print_function

import multiprocessing
import os
import sys

FILESDIR = os.path.dirname(os.path.realpath(__file__))
sys.path.insert(0, os.path.join(FILESDIR, '..', '..', 'bin'))

import ssh_client  # pylint: disable=wrong-import-position


GIT_URI = 'https://chromium.googlesource.com/webports.git'
S = '%(workdir)s'


GCLIENT = os.path.join(ssh_client.OUTPUT, 'depot_tools', 'gclient')


def src_unpack(metadata):
    """Unpack the source."""
    if os.path.exists(os.path.join(ssh_client.OUTPUT, 'webports')):
        return

    ssh_client.run([GCLIENT, 'config', '--name=src', GIT_URI],
                   cwd=metadata['S'])

    # We use --jobs=8 instead of cpu_count because this is going to be network
    # & server bound rather than cpu bound.  Don't hammer GoB services.
    ssh_client.run([GCLIENT, 'sync', '--jobs=8', '--nohooks', '-r',
                    'src@pepper_%(PV)s' % metadata], cwd=metadata['S'])


def src_configure(_metadata):
    """Configure the source."""
    if os.path.exists(os.path.join(ssh_client.OUTPUT, 'webports')):
        return

    ssh_client.run([GCLIENT, 'runhooks', '-j%s' % multiprocessing.cpu_count()])


def src_compile(_metadata):
    """Compile the source."""
    env = ssh_client.pnacl_env()
    ssh_client.emake('-C', 'src', 'glibc-compat', jobs=1, env=env)


def src_install(_metadata):
    """Install the package."""
    target = os.getcwd()
    path = os.path.join(ssh_client.OUTPUT, 'webports')
    ssh_client.symlink(target, path)


ssh_client.build_package(sys.modules[__name__])
